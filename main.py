import telebot
from telebot import types
from requests import get
from emoji import *
import datetime as dt
import random
import os

path = 'C:\\Users\\SER\\PycharmProjects\\test'
commands = {'/start': '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
            '/help': '–í—ã–≤–æ–¥ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª',
            '/images': '–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ',
            '/music': '–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –ø–µ—Å–Ω—é –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞'}


bot = telebot.TeleBot(open(f'{path}\\token.txt', 'r').readline())


def write_log(user, message='DEBUG'):
    log = open(f'{path}\\log.txt', 'w')
    log.write(f'{dt.datetime.now()}: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {user.id}({user.first_name} '
              f'{user.last_name}) *** {message}')
    log.close()


@bot.message_handler(commands=['start'])
def start(msg):
    if msg.id == 1:
        write_log(msg.from_user, '–ù–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏–µ —Å –î–∂–µ–Ω–∏—Ñ–µ—Ä')
    write_log(msg.from_user, '–ü–æ–∑–¥–æ—Ä–æ–≤–∞–ª—Å—è')
    bot.send_message(msg.chat.id, f'–ü—Ä–∏–≤–µ—Ç, <b>{msg.from_user.first_name} {msg.from_user.last_name}</b>.'
                                  f' –Ø —Ä–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –í–≤–µ–¥–∏ "/help" —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –≤–æ–∑–º–æ–∂–æ—Å—Ç–∏.', parse_mode='html')


@bot.message_handler(commands=['help'])
def show_command(msg):
    # bot.send_message(msg.chat.id, str(msg)),
    bot.send_message(msg.chat.id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö —É–º–µ–Ω–∏–π:\n' +
                     '\n'.join([f'{key} ‚Äì {commands[key]}' for key in commands.keys()]))


@bot.message_handler(commands=['images'])
def get_message(msg):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    [markup.add(types.KeyboardButton(item)) for item in ['–ö–æ—Ç–∏–∫–∏ üê±', '–°–æ–±–∞—á–∫–∏ üê∂', '–õ–∏—Å–∏—á–∫–∏ ü¶ä', '–°—Ç–æ–ø üö´']]
    bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å', reply_markup=markup)


@bot.message_handler(commands=['music'])
def phonk(msg):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    [markup.add(types.KeyboardButton(item)) for item in ['Phonk', '–°—Ç–æ–ø üö´']]
    bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–ª—É—à–∞—Ç—å', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def send_photo(msg):
    if msg.text.lower() == '–∫–æ—Ç–∏–∫–∏ üê±':
        bot.send_message(msg.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É ‚è≥')
        photo = open(f'{path}\\photo\\cat.jpg', 'wb')
        url = get(get('https://aws.random.cat/meow').json()['file']).content
        photo.write(url)
        photo.close()
        bot.send_photo(msg.chat.id, open(f'{path}\\photo\\cat.jpg', 'rb'), '–í–æ—Ç—å üòÅ')
    elif msg.text.lower() == '—Å–æ–±–∞—á–∫–∏ üê∂':
        bot.send_message(msg.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É ‚è≥')
        photo = open(f'{path}\\photo\\dog.jpg', 'wb')
        url = get(get('https://random.dog/woof.json').json()['url']).content
        photo.write(url)
        photo.close()
        bot.send_photo(msg.chat.id, open(f'{path}\\photo\\dog.jpg', 'rb'), '–í–æ—Ç—å üòÅ')
    elif msg.text.lower() == '–ª–∏—Å–∏—á–∫–∏ ü¶ä':
        bot.send_message(msg.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É ‚è≥')
        photo = open(f'{path}\\photo\\fox.jpg', 'wb')
        url = get(get('https://randomfox.ca/floof/').json()['image']).content
        photo.write(url)
        photo.close()
        bot.send_photo(msg.chat.id, open(f'{path}\\photo\\fox.jpg', 'rb'), '–í–æ—Ç—å üòÅ')
    elif msg.text.lower() == '—Å—Ç–æ–ø üö´':
        bot.send_message(msg.chat.id, '–ü–æ—Ö–æ–∂–µ —Ö–≤–∞—Ç–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∫–∞—Ä—Ç–∏–Ω–æ—á–µ–∫)',
                         reply_markup=types.ReplyKeyboardRemove())
    elif msg.text.lower() == 'phonk':
        bot.send_message(msg.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É ‚è≥')
        directory = f'{path}\\music\\phonk'
        music = open(directory + '\\' + random.choice(os.listdir(directory)), 'rb')
        bot.send_audio(msg.chat.id, music)


bot.infinity_polling(timeout=1)
